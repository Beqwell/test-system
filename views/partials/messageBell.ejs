<% const showIndicator = allMessages.some(m => !m.is_read); %>

<div id="message-bell-container">
  <a href="#" onclick="toggleMessagePopup(event)" title="Messages" id="bell-icon">
    <img id="message-bell" src="/svg/bell.svg"
         alt="Messages"
         style="width: 24px; height: 24px; vertical-align: middle;"
         class="<%= showIndicator ? 'bell-red' : '' %>">
  </a>

  <span id="msg-indicator" class="<%= showIndicator ? '' : 'hidden' %>"></span>

  <div id="message-popup">
    <h4>ðŸ“© Messages</h4>
    <div id="msg-list">
      <% if (!allMessages || allMessages.length === 0) { %>
        <p class="no-msg">No messages</p>
      <% } else { %>
        <% allMessages.forEach(m => { %>
          <div class="msg-item <%= m.is_read ? '' : 'unread' %>">
            <div class="msg-meta">
              <strong><%= m.teacher_name %></strong>
              <em class="msg-course">(<%= m.course_name %>)</em>
              <small><%= new Date(m.created_at).toLocaleString() %></small>
              <span class="msg-type">
                <% if (m.message_type === 'group') { %>
                  <img src="/img/courseMessage.png" alt="For course" style="height: 16px; vertical-align: middle;">
                  For course
                <% } else { %>
                  <img src="/img/ForYouMessage.png" alt="For you" style="height: 16px; vertical-align: middle;">
                  For you
                <% } %>
              </span>
            </div>
            <div class="msg-content"><%= m.content %></div>
          </div>
        <% }) %>
      <% } %>
    </div>
  </div>
</div>

<script>
  async function toggleMessagePopup(e) {
    e.preventDefault();
    const popup = document.getElementById('message-popup');
    const visible = popup.style.display === 'block';
    popup.style.display = visible ? 'none' : 'block';

    if (!visible) {
      scrollMessagesToBottom();
      markMessagesAsRead();
    }
  }

  function scrollMessagesToBottom() {
    const list = document.getElementById('msg-list');
    if (list) list.scrollTop = list.scrollHeight;
  }

  function markMessagesAsRead() {
    fetch('/api/mark-all-read', { method: 'POST' });
    const indicator = document.getElementById('msg-indicator');
    const bellImg = document.getElementById('message-bell');
    if (indicator) indicator.classList.add('hidden');
    if (bellImg) bellImg.classList.remove('bell-red');
  }

  document.addEventListener('click', function(event) {
    const bell = document.getElementById('message-bell-container');
    const popup = document.getElementById('message-popup');
    if (!bell.contains(event.target)) {
      popup.style.display = 'none';
    }
  });

  async function refreshMessages() {
    try {
      const res = await fetch('/api/messages-json');
      const messages = await res.json();
      const msgList = document.getElementById('msg-list');
      const indicator = document.getElementById('msg-indicator');
      const bellImg = document.getElementById('message-bell');

      const hasUnread = messages.some(m => !m.is_read);

      if (indicator) indicator.classList.toggle('hidden', !hasUnread);
      if (bellImg) bellImg.classList.toggle('bell-red', hasUnread);

      if (!messages.length) {
        msgList.innerHTML = '<p class="no-msg">No messages</p>';
        return;
      }

      msgList.innerHTML = messages.map(m => `
        <div class="msg-item ${m.is_read ? '' : 'unread'}">
          <div class="msg-meta">
            <strong>${m.teacher_name}</strong>
            <em class="msg-course">(${m.course_name})</em>
            <small>${new Date(m.created_at).toLocaleString()}</small>
            <span class="msg-type">
              ${m.message_type === 'group'
                ? '<img src="/img/courseMessage.png" alt="For course" style="height: 16px; vertical-align: middle;"> For course'
                : '<img src="/img/ForYouMessage.png" alt="For you" style="height: 16px; vertical-align: middle;"> For you'}
            </span>
          </div>
          <div class="msg-content">${m.content}</div>
        </div>
      `).join('');
    } catch (err) {
      console.error('Failed to fetch messages', err);
    }
  }

  setInterval(() => {
    refreshMessages();
  }, 15000);
</script>
